{
  "contractName": "BountyContract",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextTokenDistribution",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalVotesRecevied",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bountyCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "distributeTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "canDistributeTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextVoteDistribution",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "voteBalanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "canDistributeVotes",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getHoldersVoteAllocation",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bountyIndexes",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "holderKeys",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_project",
          "type": "address"
        }
      ],
      "name": "getProjectTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projectKeys",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "projectVotes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "distributeVotes",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "0x60606040526040805190810160405280600381526020017f52504d0000000000000000000000000000000000000000000000000000000000815250600090805190602001906200005192919062000162565b506040805190810160405280600381526020017f52504d0000000000000000000000000000000000000000000000000000000000815250600190805190602001906200009f92919062000162565b5060066002553415620000b157600080fd5b600080600033600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600381905550600254600a0a60035402600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160098190555080600a8190555050505062000211565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001a557805160ff1916838001178555620001d6565b82800160010185558215620001d6579182015b82811115620001d5578251825591602001919060010190620001b8565b5b509050620001e59190620001e9565b5090565b6200020e91905b808211156200020a576000816000905550600101620001f0565b5090565b90565b611bc480620002216000396000f30060606040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610164578063095ea7b3146101f25780631791193f1461024c57806318160ddd146102755780631f544d1a1461029e57806323b872dd146102c7578063313ce567146103405780633e362c961461036957806342966c68146103925780635f74bbde146103b557806370a08231146103f75780637366794e1461044457806376412dc61461047f5780637d8abeed146104ac578063840e78fd146104d557806384ab8bb81461052257806395d89b411461056f578063a849e7eb146105fd578063a9059cbb1461062a578063c29fc80114610684578063c5bd42c2146106d1578063d48ff3f614610734578063d8599e8414610797578063d8821bf0146107e4578063d9dd057c14610847578063dd62ed3e14610894578063fc26645614610900575b600080fd5b341561016f57600080fd5b61017761093b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101b757808201518184015260208101905061019c565b50505050905090810190601f1680156101e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101fd57600080fd5b610232600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506109d9565b604051808215151515815260200191505060405180910390f35b341561025757600080fd5b61025f610a6d565b6040518082815260200191505060405180910390f35b341561028057600080fd5b610288610a73565b6040518082815260200191505060405180910390f35b34156102a957600080fd5b6102b1610a79565b6040518082815260200191505060405180910390f35b34156102d257600080fd5b610326600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610a7f565b604051808215151515815260200191505060405180910390f35b341561034b57600080fd5b610353610e4b565b6040518082815260200191505060405180910390f35b341561037457600080fd5b61037c610e51565b6040518082815260200191505060405180910390f35b341561039d57600080fd5b6103b36004808035906020019091905050610e57565b005b34156103c057600080fd5b6103f5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610fc8565b005b341561040257600080fd5b61042e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110c6565b6040518082815260200191505060405180910390f35b341561044f57600080fd5b610465600480803590602001909190505061110f565b604051808215151515815260200191505060405180910390f35b341561048a57600080fd5b610492611269565b604051808215151515815260200191505060405180910390f35b34156104b757600080fd5b6104bf611282565b6040518082815260200191505060405180910390f35b34156104e057600080fd5b61050c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611288565b6040518082815260200191505060405180910390f35b341561052d57600080fd5b610559600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506112a0565b6040518082815260200191505060405180910390f35b341561057a57600080fd5b6105826112e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105c25780820151818401526020810190506105a7565b50505050905090810190601f1680156105ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561060857600080fd5b610610611387565b604051808215151515815260200191505060405180910390f35b341561063557600080fd5b61066a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506113a0565b604051808215151515815260200191505060405180910390f35b341561068f57600080fd5b6106bb600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061169a565b6040518082815260200191505060405180910390f35b34156106dc57600080fd5b6106f26004808035906020019091905050611702565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561073f57600080fd5b6107556004808035906020019091905050611741565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156107a257600080fd5b6107ce600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611780565b6040518082815260200191505060405180910390f35b34156107ef57600080fd5b6108056004808035906020019091905050611830565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561085257600080fd5b61087e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061186f565b6040518082815260200191505060405180910390f35b341561089f57600080fd5b6108ea600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506118b8565b6040518082815260200191505060405180910390f35b341561090b57600080fd5b610921600480803590602001909190505061193f565b604051808215151515815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d15780601f106109a6576101008083540402835291602001916109d1565b820191906000526020600020905b8154815290600101906020018083116109b457829003601f168201915b505050505081565b6000600254600a0a8202600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60095481565b60035481565b600b5481565b600081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610b4c575081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b8015610b585750600082115b8015610be35750600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b15610e3f57610c41600254600a0a8302600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aba90919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d1a600254600a0a8302600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aba90919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610df3600254600a0a8302600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ad390919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019050610e44565b600090505b9392505050565b60025481565b60125481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610eb357600080fd5b80610edf600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166110c6565b10151515610eec57600080fd5b610f608160046000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aba90919063ffffffff16565b60046000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561101657600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555080600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600b600081548092919060010191905055505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561117057600080fd5b60008411151561117f57600080fd5b611187611269565b151561119257600080fd5b62093a80600960008282540192505081905550600091505b600d8054905082101561125657600d828154811015156111c657fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506111fd81611780565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081806001019250506111aa565b6000600b81905550600192505050919050565b60006009544211151561127b57600080fd5b6001905090565b600a5481565b600c6020528060005260406000206000915090505481565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561137f5780601f106113545761010080835404028352916020019161137f565b820191906000526020600020905b81548152906001019060200180831161136257829003601f168201915b505050505081565b6000600a544211151561139957600080fd5b6001905090565b600080600080600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141515156113e257600080fd5b61143b600254600a0a8602600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aba90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506114d7600254600a0a8602600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ad390919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009250600091505b6007805490508210156115b75760078281548110151561153f57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115aa57600192506115b7565b8180600101925050611523565b60001515831515141561162857600780548060010182816115d89190611b47565b9160005260206000209001600088909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040518082815260200191505060405180910390a36001935050505092915050565b6000806000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491506116f660035483611af190919063ffffffff16565b90508092505050919050565b600f8181548110151561171157fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078181548110151561175057fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115156117d157600080fd5b611825600b54600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611af190919063ffffffff16565b905080915050919050565b600d8181548110151561183f57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119a057600080fd5b6000841115156119af57600080fd5b6119b7611387565b15156119c257600080fd5b62093a80600a60008282540192505081905550600091505b600780549050821015611aaf576007828154811015156119f657fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611a56600254600a0a611a4886611a3a8561169a565b611b0c90919063ffffffff16565b611af190919063ffffffff16565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081806001019250506119da565b600192505050919050565b6000828211151515611ac857fe5b818303905092915050565b6000808284019050838110151515611ae757fe5b8091505092915050565b6000808284811515611aff57fe5b0490508091505092915050565b6000806000841415611b215760009150611b40565b8284029050828482811515611b3257fe5b04141515611b3c57fe5b8091505b5092915050565b815481835581811511611b6e57818360005260206000209182019101611b6d9190611b73565b5b505050565b611b9591905b80821115611b91576000816000905550600101611b79565b5090565b905600a165627a7a7230582019f79f3a7760dac4349d9558593085c88515133c8eb8fa181edcbe846296caa80029",
  "deployedBytecode": "0x60606040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610164578063095ea7b3146101f25780631791193f1461024c57806318160ddd146102755780631f544d1a1461029e57806323b872dd146102c7578063313ce567146103405780633e362c961461036957806342966c68146103925780635f74bbde146103b557806370a08231146103f75780637366794e1461044457806376412dc61461047f5780637d8abeed146104ac578063840e78fd146104d557806384ab8bb81461052257806395d89b411461056f578063a849e7eb146105fd578063a9059cbb1461062a578063c29fc80114610684578063c5bd42c2146106d1578063d48ff3f614610734578063d8599e8414610797578063d8821bf0146107e4578063d9dd057c14610847578063dd62ed3e14610894578063fc26645614610900575b600080fd5b341561016f57600080fd5b61017761093b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101b757808201518184015260208101905061019c565b50505050905090810190601f1680156101e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101fd57600080fd5b610232600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506109d9565b604051808215151515815260200191505060405180910390f35b341561025757600080fd5b61025f610a6d565b6040518082815260200191505060405180910390f35b341561028057600080fd5b610288610a73565b6040518082815260200191505060405180910390f35b34156102a957600080fd5b6102b1610a79565b6040518082815260200191505060405180910390f35b34156102d257600080fd5b610326600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610a7f565b604051808215151515815260200191505060405180910390f35b341561034b57600080fd5b610353610e4b565b6040518082815260200191505060405180910390f35b341561037457600080fd5b61037c610e51565b6040518082815260200191505060405180910390f35b341561039d57600080fd5b6103b36004808035906020019091905050610e57565b005b34156103c057600080fd5b6103f5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610fc8565b005b341561040257600080fd5b61042e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110c6565b6040518082815260200191505060405180910390f35b341561044f57600080fd5b610465600480803590602001909190505061110f565b604051808215151515815260200191505060405180910390f35b341561048a57600080fd5b610492611269565b604051808215151515815260200191505060405180910390f35b34156104b757600080fd5b6104bf611282565b6040518082815260200191505060405180910390f35b34156104e057600080fd5b61050c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611288565b6040518082815260200191505060405180910390f35b341561052d57600080fd5b610559600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506112a0565b6040518082815260200191505060405180910390f35b341561057a57600080fd5b6105826112e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105c25780820151818401526020810190506105a7565b50505050905090810190601f1680156105ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561060857600080fd5b610610611387565b604051808215151515815260200191505060405180910390f35b341561063557600080fd5b61066a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506113a0565b604051808215151515815260200191505060405180910390f35b341561068f57600080fd5b6106bb600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061169a565b6040518082815260200191505060405180910390f35b34156106dc57600080fd5b6106f26004808035906020019091905050611702565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561073f57600080fd5b6107556004808035906020019091905050611741565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156107a257600080fd5b6107ce600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611780565b6040518082815260200191505060405180910390f35b34156107ef57600080fd5b6108056004808035906020019091905050611830565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561085257600080fd5b61087e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061186f565b6040518082815260200191505060405180910390f35b341561089f57600080fd5b6108ea600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506118b8565b6040518082815260200191505060405180910390f35b341561090b57600080fd5b610921600480803590602001909190505061193f565b604051808215151515815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d15780601f106109a6576101008083540402835291602001916109d1565b820191906000526020600020905b8154815290600101906020018083116109b457829003601f168201915b505050505081565b6000600254600a0a8202600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60095481565b60035481565b600b5481565b600081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610b4c575081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b8015610b585750600082115b8015610be35750600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401115b15610e3f57610c41600254600a0a8302600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aba90919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d1a600254600a0a8302600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aba90919063ffffffff16565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610df3600254600a0a8302600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ad390919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019050610e44565b600090505b9392505050565b60025481565b60125481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610eb357600080fd5b80610edf600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166110c6565b10151515610eec57600080fd5b610f608160046000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aba90919063ffffffff16565b60046000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561101657600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555080600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600b600081548092919060010191905055505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561117057600080fd5b60008411151561117f57600080fd5b611187611269565b151561119257600080fd5b62093a80600960008282540192505081905550600091505b600d8054905082101561125657600d828154811015156111c657fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506111fd81611780565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081806001019250506111aa565b6000600b81905550600192505050919050565b60006009544211151561127b57600080fd5b6001905090565b600a5481565b600c6020528060005260406000206000915090505481565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561137f5780601f106113545761010080835404028352916020019161137f565b820191906000526020600020905b81548152906001019060200180831161136257829003601f168201915b505050505081565b6000600a544211151561139957600080fd5b6001905090565b600080600080600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141515156113e257600080fd5b61143b600254600a0a8602600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aba90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506114d7600254600a0a8602600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ad390919063ffffffff16565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009250600091505b6007805490508210156115b75760078281548110151561153f57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115aa57600192506115b7565b8180600101925050611523565b60001515831515141561162857600780548060010182816115d89190611b47565b9160005260206000209001600088909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040518082815260200191505060405180910390a36001935050505092915050565b6000806000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491506116f660035483611af190919063ffffffff16565b90508092505050919050565b600f8181548110151561171157fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078181548110151561175057fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115156117d157600080fd5b611825600b54600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611af190919063ffffffff16565b905080915050919050565b600d8181548110151561183f57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119a057600080fd5b6000841115156119af57600080fd5b6119b7611387565b15156119c257600080fd5b62093a80600a60008282540192505081905550600091505b600780549050821015611aaf576007828154811015156119f657fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611a56600254600a0a611a4886611a3a8561169a565b611b0c90919063ffffffff16565b611af190919063ffffffff16565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081806001019250506119da565b600192505050919050565b6000828211151515611ac857fe5b818303905092915050565b6000808284019050838110151515611ae757fe5b8091505092915050565b6000808284811515611aff57fe5b0490508091505092915050565b6000806000841415611b215760009150611b40565b8284029050828482811515611b3257fe5b04141515611b3c57fe5b8091505b5092915050565b815481835581811511611b6e57818360005260206000209182019101611b6d9190611b73565b5b505050565b611b9591905b80821115611b91576000816000905550600101611b79565b5090565b905600a165627a7a7230582019f79f3a7760dac4349d9558593085c88515133c8eb8fa181edcbe846296caa80029",
  "sourceMap": "47:4706:0:-;;;634:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;664:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;722:1;696:27;;85:53:0;;;;;;;;115:1;118;121;1931:10:3;1923:5;;:18;;;;;;;;;;;;;;;;;;1961:12;1947:11;:26;;;;2024:8;;2018:2;:14;2003:11;;:30;1980:8;:20;1989:10;1980:20;;;;;;;;;;;;;;;:53;;;;2063:22;2039:21;:46;;;;2114:21;2091:20;:44;;;;1812:328;;;47:4706:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "47:4706:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5113:163:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1081:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4582:527;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;696:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1437:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5421:169;;;;;;;;;;;;;;;;;;;;;;;;;;3013:208;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1484:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2144:427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3225:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1041:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1138:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3355:124:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3972:606;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3529:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1257:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3750:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1182:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1709:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5280:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2575:434;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5113:163::-;5178:12;5246:8;;5240:2;:14;5230:7;:24;5198:7;:19;5206:10;5198:19;;;;;;;;;;;;;;;:29;5218:8;5198:29;;;;;;;;;;;;;;;:56;;;;5267:4;5260:11;;5113:163;;;;:::o;1001:36::-;;;;:::o;727:26::-;;;;:::o;1081:33::-;;;;:::o;4582:527::-;4662:12;4705:7;4686:8;:15;4695:5;4686:15;;;;;;;;;;;;;;;;:26;;:67;;;;;4746:7;4716;:14;4724:5;4716:14;;;;;;;;;;;;;;;:26;4731:10;4716:26;;;;;;;;;;;;;;;;:37;;4686:67;:82;;;;;4767:1;4757:7;:11;4686:82;:125;;;;;4798:8;:13;4807:3;4798:13;;;;;;;;;;;;;;;;4788:7;4772:8;:13;4781:3;4772:13;;;;;;;;;;;;;;;;:23;:39;4686:125;4682:423;;;4840:45;4876:8;;4870:2;:14;4860:7;:24;4840:8;:15;4849:5;4840:15;;;;;;;;;;;;;;;;:19;;:45;;;;:::i;:::-;4822:8;:15;4831:5;4822:15;;;;;;;;;;;;;;;:63;;;;4922:56;4969:8;;4963:2;:14;4953:7;:24;4922:7;:14;4930:5;4922:14;;;;;;;;;;;;;;;:26;4937:10;4922:26;;;;;;;;;;;;;;;;:30;;:56;;;;:::i;:::-;4893:7;:14;4901:5;4893:14;;;;;;;;;;;;;;;:26;4908:10;4893:26;;;;;;;;;;;;;;;:85;;;;5002:43;5036:8;;5030:2;:14;5020:7;:24;5002:8;:13;5011:3;5002:13;;;;;;;;;;;;;;;;:17;;:43;;;;:::i;:::-;4986:8;:13;4995:3;4986:13;;;;;;;;;;;;;;;:59;;;;5061:4;5054:11;;;;4682:423;5093:5;5086:12;;4582:527;;;;;;:::o;696:27::-;;;;:::o;1437:23::-;;;;:::o;5421:169::-;5484:5;;;;;;;;;;;5470:19;;:10;:19;;;5462:28;;;;;;;;5524:7;5504:16;5514:5;;;;;;;;;;;5504:9;:16::i;:::-;:27;;5496:36;;;;;;;;5557:28;5577:7;5557:8;:15;5566:5;;;;;;;;;;;5557:15;;;;;;;;;;;;;;;;:19;;:28;;;;:::i;:::-;5539:8;:15;5548:5;;;;;;;;;;;5539:15;;;;;;;;;;;;;;;:46;;;;5421:169;:::o;3013:208::-;3106:7;3080:10;:22;3091:10;3080:22;;;;;;;;;;;;;;;;:33;;3072:42;;;;;;;;3147:7;3121:10;:22;3132:10;3121:22;;;;;;;;;;;;;;;;:33;;;;;;;;;;;3182:7;3160:8;:18;3169:8;3160:18;;;;;;;;;;;;;;;;:29;;;;;;;;;;;3196:18;;:20;;;;;;;;;;;;;3013:208;;:::o;1484:96::-;1542:4;1561:8;:14;1570:4;1561:14;;;;;;;;;;;;;;;;1554:21;;1484:96;;;:::o;2144:427::-;2212:4;2379:6;2428:15;5921:5;;;;;;;;;;;5907:19;;:10;:19;;;5899:28;;;;;;;;2242:1;2232:7;:11;2224:20;;;;;;;;2258:21;:19;:21::i;:::-;2250:30;;;;;;;;2351:16;2326:21;;:41;;;;;;;;;;;2388:1;2379:10;;2374:147;2395:11;:18;;;;2391:1;:22;2374:147;;;2446:11;2458:1;2446:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:32;;2489:25;2506:7;2489:16;:25::i;:::-;2468:8;:17;2477:7;2468:17;;;;;;;;;;;;;;;;:46;;;;;;;;;;;2415:3;;;;;;;2374:147;;;2548:1;2527:18;:22;;;;2562:4;2555:11;;2144:427;;;;;:::o;3225:126::-;3281:4;3307:21;;3301:3;:27;3293:36;;;;;;;;3342:4;3335:11;;3225:126;:::o;1041:35::-;;;;:::o;1138:40::-;;;;;;;;;;;;;;;;;:::o;1603:102::-;1665:4;1684:10;:16;1695:4;1684:16;;;;;;;;;;;;;;;;1677:23;;1603:102;;;:::o;664:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3355:124::-;3410:4;3436:20;;3430:3;:26;3422:35;;;;;;;;3470:4;3463:11;;3355:124;:::o;3972:606::-;4032:4;4263:12;4294:6;4342:14;4067:1;4052:17;;:3;:17;;;;4044:26;;;;;;;;4100:49;4140:8;;4134:2;:14;4125:6;:23;4100:8;:20;4109:10;4100:20;;;;;;;;;;;;;;;;:24;;:49;;;;:::i;:::-;4077:8;:20;4086:10;4077:20;;;;;;;;;;;;;;;:72;;;;4171:42;4204:8;;4198:2;:14;4189:6;:23;4171:8;:13;4180:3;4171:13;;;;;;;;;;;;;;;;:17;;:42;;;;:::i;:::-;4155:8;:13;4164:3;4155:13;;;;;;;;;;;;;;;:58;;;;4278:5;4263:20;;4303:1;4294:10;;4289:165;4310:10;:17;;;;4306:1;:21;4289:165;;;4359:10;4370:1;4359:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;4342:30;;4395:3;4385:13;;:6;:13;;;4381:67;;;4420:4;4410:14;;4434:5;;4381:67;4329:3;;;;;;;4289:165;;;4475:5;4464:16;;:7;:16;;;4460:57;;;4490:10;:20;;;;;;;;;;;:::i;:::-;;;;;;;;;;4506:3;4490:20;;;;;;;;;;;;;;;;;;;;;;;4460:57;4544:3;4523:33;;4532:10;4523:33;;;4549:6;4523:33;;;;;;;;;;;;;;;;;;4569:4;4562:11;;3972:606;;;;;;;:::o;3529:183::-;3604:7;3619:12;3656:11;3634:8;:16;3643:6;3634:16;;;;;;;;;;;;;;;;3619:31;;3670:21;3679:11;;3670:4;:8;;:21;;;;:::i;:::-;3656:35;;3704:3;3697:10;;3529:183;;;;;:::o;1257:30::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;915:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3750:198::-;3819:4;3869:11;3860:1;3839:8;:18;3848:8;3839:18;;;;;;;;;;;;;;;;:22;3831:31;;;;;;;;3883:44;3908:18;;3883:10;:20;3894:8;3883:20;;;;;;;;;;;;;;;;:24;;:44;;;;:::i;:::-;3869:58;;3940:3;3933:10;;3750:198;;;;:::o;1182:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1709:99::-;1770:4;1789:8;:14;1798:4;1789:14;;;;;;;;;;;;;;;;1782:21;;1709:99;;;:::o;5280:137::-;5358:14;5387:7;:15;5395:6;5387:15;;;;;;;;;;;;;;;:25;5403:8;5387:25;;;;;;;;;;;;;;;;5380:32;;5280:137;;;;:::o;2575:434::-;2642:4;2807:6;2855:14;5921:5;;;;;;;;;;;5907:19;;:10;:19;;;5899:28;;;;;;;;2672:1;2662:7;:11;2654:20;;;;;;;;2688;:18;:20::i;:::-;2680:29;;;;;;;;2779:16;2755:20;;:40;;;;;;;;;;;2816:1;2807:10;;2802:185;2823:10;:17;;;;2819:1;:21;2802:185;;;2872:10;2883:1;2872:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;2855:30;;2915:65;2971:8;;2965:2;:14;2915:45;2952:7;2915:32;2940:6;2915:24;:32::i;:::-;:36;;:45;;;;:::i;:::-;:49;;:65;;;;:::i;:::-;2893:10;:18;2904:6;2893:18;;;;;;;;;;;;;;;;:87;;;;;;;;;;;2842:3;;;;;;;2802:185;;;3000:4;2993:11;;2575:434;;;;;:::o;961:110:4:-;1019:7;1046:1;1041;:6;;1034:14;;;;;;1065:1;1061;:5;1054:12;;961:110;;;;:::o;1133:129::-;1191:7;1206:9;1222:1;1218;:5;1206:17;;1241:1;1236;:6;;1229:14;;;;;;1256:1;1249:8;;1133:129;;;;;:::o;583:265::-;641:7;730:9;746:1;742;:5;;;;;;;;730:17;;842:1;835:8;;583:265;;;;;:::o;328:173::-;386:7;441:9;410:1;405;:6;401:35;;;428:1;421:8;;;;401:35;457:1;453;:5;441:17;;480:1;475;471;:5;;;;;;;;:10;464:18;;;;;;495:1;488:8;;328:173;;;;;;:::o;47:4706:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\nimport \"./RPM.sol\";\n\ncontract BountyContract is RPM {\n\n    function BountyContract() RPM(0, 0, 0) public {\n    }\n\n   /* function createBounty(address _projectAddress, uint _amount, uint _deadlineBlockNumber) public {\n        require(_projectAddress != address(0));\n        require(_amount > 0);\n        require(_deadlineBlockNumber > 0);\n\n        uint bountyId = getNextBountyId();\n\n        if (bountyId > 0) {\n            bountyMap[_projectAddress][bountyId] = Bounty(bountyId, msg.sender, _amount, now, _deadlineBlockNumber, false);\n            bountyIndexes[bountyId] = _projectAddress;\n            bountyCount ++;\n        }\n    }\n\n    function addToBounty(address _projectAddress, uint _bountyId, uint _amount) public {\n        require(_projectAddress != address(0));\n        require(_amount > 0);\n\n        require(bountyMap[_projectAddress][_bountyId].successfullyClaimed != true);\n        require(bountyMap[_projectAddress][_bountyId].deadlineBlockNumber < now);\n\n        require(balanceOf(msg.sender) >= _amount);\n\n        BountyAddition memory bountyAddtion = BountyAddition(msg.sender, _amount, now);\n        bountyAdditionMap[_bountyId].push(bountyAddtion);\n    }\n\n    function getActiveBounties(address _projectAddress) public returns (Bounty[]) {\n        require(_projectAddress != address(0));\n        Bounty[] storage activeBounties;\n\n        for (uint256 i = 0; i < bountyMap[_projectAddress].length; i++) {\n            uint bountyId = bountyMap[_projectAddress][i].bountyId;\n\n            if (bountyMap[_projectAddress][i].successfullyClaimed != true && bountyMap[_projectAddress][i].deadlineBlockNumber > now) {\n                \n                address bountyCreator = bountyMap[_projectAddress][i].bountyCreator;\n                uint amount = bountyMap[_projectAddress][i].bountyAmount;\n                uint256 lodgedDate = bountyMap[_projectAddress][i].lodgedDate;\n                uint deadlineBlockNumber = bountyMap[_projectAddress][i].deadlineBlockNumber;\n\n                for (uint256 j = 0; j < bountyAdditionMap[bountyId].length; j++) {\n                    amount += bountyAdditionMap[bountyId][j].addedBountyAmount;\n                }\n\n                Bounty memory newBounty = Bounty(bountyId, bountyCreator, amount, lodgedDate, deadlineBlockNumber, false);\n                activeBounties.push(newBounty);\n            }\n        }\n\n        return activeBounties;\n    }\n\n    function createBountyClaim(uint _bountyId) public {\n        bountyClaimMap[_bountyId].push(BountyClaim(msg.sender, false, now));\n    }\n\n    function acceptBountyClaim(address _projectAddress, uint _bountyId, uint _bountyClaimId) public {\n        require(_projectAddress != address(0));\n        Bounty storage bounty = bountyMap[_projectAddress][_bountyId];\n\n        //Maybe make modifier\n        require(bounty.bountyCreator == msg.sender);\n\n        bounty.successfullyClaimed = true;\n        BountyClaim[] storage bountyClaim = bountyClaimMap[_bountyId];\n        bountyClaim[_bountyClaimId].successfulClaim = true;\n\n        //send tokens\n        uint amount = bounty.bountyAmount;\n        bounty.bountyAmount = 0; //Review\n\n        //Get all additional bounties too\n        for (uint i = 0; i < bountyAdditionMap[_bountyId].length; i++) {\n            amount += bountyAdditionMap[_bountyId][i].addedBountyAmount;\n            bountyAdditionMap[_bountyId][i].addedBountyAmount = 0; //Review\n        }\n\n        address claimerAddress = bountyClaim[_bountyClaimId].claimerAddress;\n        balances[claimerAddress] += amount;\n    }\n\n    function refundBounty(address _projectAddress, uint _bountyId) public {\n        require(_projectAddress != address(0));\n        Bounty storage bounty = bountyMap[_projectAddress][_bountyId];\n\n        require(bounty.bountyCreator == msg.sender);\n        require(bounty.successfullyClaimed == false);\n        require(bounty.deadlineBlockNumber > now);\n\n        uint amount = bounty.bountyAmount;\n        bounty.bountyAmount = 0;\n\n        balances[bounty.bountyCreator] = balances[bounty.bountyCreator].add(amount);\n\n        //Refund all additional bounties too\n        for (uint i = 0; i < bountyAdditionMap[_bountyId].length; i++) {\n            amount += bountyAdditionMap[_bountyId][i].addedBountyAmount;\n            bountyAdditionMap[_bountyId][i].addedBountyAmount = 0; //Review\n        }\n    }\n\n    function getNextBountyId() public constant returns (uint) {\n        return bountyCount + 1;\n    }\n\n    function getNextAdditionalBountyId(uint _bountyId) public constant returns (uint) {\n        return bountyAdditionMap[_bountyId].length + 1;\n    }\n\n    function getNextBountyClaimId(uint _bountyId) public constant returns (uint) {\n        return bountyClaimMap[_bountyId].length + 1;\n    }*/\n}",
  "sourcePath": "/Users/didil/work/projects/ethereum/recPM/src/contracts/BountyContract.sol",
  "ast": {
    "attributes": {
      "absolutePath": "/Users/didil/work/projects/ethereum/recPM/src/contracts/BountyContract.sol",
      "exportedSymbols": {
        "BountyContract": [
          14
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".18"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "attributes": {
          "SourceUnit": 873,
          "absolutePath": "/Users/didil/work/projects/ethereum/recPM/src/contracts/RPM.sol",
          "file": "./RPM.sol",
          "scope": 15,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "26:19:0"
      },
      {
        "attributes": {
          "contractDependencies": [
            872
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            14,
            872
          ],
          "name": "BountyContract",
          "scope": 15
        },
        "children": [
          {
            "attributes": {
              "arguments": [
                null
              ]
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "RPM",
                  "referencedDeclaration": 872,
                  "type": "contract RPM"
                },
                "id": 3,
                "name": "UserDefinedTypeName",
                "src": "74:3:0"
              }
            ],
            "id": 4,
            "name": "InheritanceSpecifier",
            "src": "74:3:0"
          },
          {
            "attributes": {
              "constant": false,
              "implemented": true,
              "isConstructor": true,
              "name": "BountyContract",
              "payable": false,
              "scope": 14,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 5,
                "name": "ParameterList",
                "src": "108:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 11,
                "name": "ParameterList",
                "src": "131:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 872,
                      "type": "type(contract RPM)",
                      "value": "RPM"
                    },
                    "id": 6,
                    "name": "Identifier",
                    "src": "111:3:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "30",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 0",
                      "value": "0"
                    },
                    "id": 7,
                    "name": "Literal",
                    "src": "115:1:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "30",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 0",
                      "value": "0"
                    },
                    "id": 8,
                    "name": "Literal",
                    "src": "118:1:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "30",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 0",
                      "value": "0"
                    },
                    "id": 9,
                    "name": "Literal",
                    "src": "121:1:0"
                  }
                ],
                "id": 10,
                "name": "ModifierInvocation",
                "src": "111:12:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 12,
                "name": "Block",
                "src": "131:7:0"
              }
            ],
            "id": 13,
            "name": "FunctionDefinition",
            "src": "85:53:0"
          }
        ],
        "id": 14,
        "name": "ContractDefinition",
        "src": "47:4706:0"
      }
    ],
    "id": 15,
    "name": "SourceUnit",
    "src": "0:4753:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "1.0.1",
  "updatedAt": "2018-02-21T15:47:30.901Z"
}